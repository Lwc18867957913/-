    <link rel="stylesheet" href="css/style.css">
    <link rel="stylesheet" href="css/iconfont.css">
    <link rel="stylesheet" href="css/mianban.css">











            <div class="nei-tou">
                <a href="index.html">
                    主页
                </a>
                <p>/</p>
                <p>组件</p>
                <p>/</p>
                <p>面板</p>
            </div>
            <div class="nei-er">
                <div class="nei-er-yi">
                    <div class="nei-er-yiy">
                        <p>折叠面板</p>
                    </div>
                    <div class="nei-er-er">
                        <div class="nei-er-er-y">
                            <dt class="list_dtf">
                                <span class="shuo">
                                    <p>为什么JS社区大量采用未发布或者未广泛支持的语言特性？</p>
                                </span>
                            </dt>
                            <dd class="list_ddf">
                                <ul>
                                    <p>有不少其他答案说是因为JS太差。我下面的答案已经说了，这不是根
                                        本性的原因。但除此之外，我还要纠正一些对JS具体问题的误解。J
                                        S当初是被作为脚本语言设计的，所以某些问题并不是JS设计得差或者
                                        是JS设计者的失误。比如var的作用域问题，并不是“错误”，而是当
                                        时绝大部分脚本语言都是这样的，如perl/php/sh等。模块的问题也
                                        是，脚本语言几乎都没有模块/命名空间功能。弱类型、for-in之类的
                                        问题也是，只不过现在用那些老的脚本语言的人比较少，所以很多人
                                        都误以为是JS才有的坑。另外有人说JS是半残语言，满足不了开发需
                                        求，1999年就该死。半残这个嘛，就夸张了。JS虽然有很多问题，但
                                        是设计总体还是优秀的。——来自知乎@贺师俊
                                    </p>
                                </ul>
                            </dd>
                            <dt class="list_dtf">
                                <span class="shuo">
                                    <p>为什么前端工程师多不愿意用 Bootstrap 框架？</p>
                                </span>
                            </dt>
                            <dd class="list_ddf">
                                <ul>
                                    <p>因为不适合。如果希望开发长期的项目或者制作产品类网站，那么就
                                        需要实现特定的设计，为了在维护项目中可以方便地按设计师要求快
                                        速修改样式，肯定会逐步编写出各种业务组件、工具类，相当于为
                                        项目自行开发一套框架。——来自知乎@Kayo/php/sh等。模块的问题
                                        也是，脚本语言几乎都没有模块/命名空间功能。弱类型、for-in之
                                        类的问题也是，只不过现在用那些老的脚本语言的人比较少，所以很
                                        多人都误以为是JS才有的坑。另外有人说JS是半残语言，满足不了开
                                        发需求，1999年就该死。半残这个嘛，就夸张了。JS虽然有很多问题
                                        ，但是设计总体还是优秀的。——来自知乎@贺师俊
                                    </p>
                                </ul>
                            </dd>
                            <dt class="list_dtf">
                                <span class="shuo">
                                    <p>layui 更适合哪些开发者？</p>
                                </span>
                            </dt>
                            <dd class="list_ddf">
                                <ul>
                                    <p>在前端技术快速变革的今天，layui 仍然坚持语义化的组织模式，甚
                                        至于模块理念都是采用类AMD组织形式，并非是有意与时代背道而驰
                                        。layui 认为以jQuery为核心的开发方式还没有到完全消亡的时候
                                        ，而早期市面上基于jQuery的UI都普通做得差强人意，所以需要有
                                        一个新的UI去重新为这一领域注入活力，并采用一些更科学的架构
                                        方式。
                                        /php/sh等。模块的问题也是，脚本语言几乎都没有模块/命名
                                        空间功能。弱类型、for-in之类的问题也是，只不过现在用那
                                        些老的脚本语言的人比较少，所以很多人都误以为是JS才有的
                                        坑。另外有人说JS是半残语言，满足不了开发需求，1999年
                                        就该死。半残这个嘛，就夸张了。JS虽然有很多问题，但是
                                        设计总体还是优秀的。——来自知乎@贺师俊
                                    </p>
                                </ul>
                            </dd>
                            <dt class="list_dtf">
                                <span class="shuo">
                                    <p>贤心是男是女？</p>
                                </span>
                            </dt>
                            <dd class="list_ddf">
                                <ul>
                                    <p>man！ 所以这个问题不要再出现了。。。/php/sh等。模块的问题也是，
                                        脚本语言几乎都没有模块/命名空间功能。弱类型、for-in之类的问题也
                                        是，只不过现在用那些老的脚本语言的人比较少，所以很多人都误以为
                                        是JS才有的坑。另外有人说JS是半残语言，满足不了开发需求，1999年
                                        就该死。半残这个嘛，就夸张了。JS虽然有很多问题，但是设计总体还是
                                        优秀的。——来自知乎@贺师俊
                                    </p>
                                </ul>
                            </dd>
                        </div>
                    </div>
                </div>
            </div>



            <div class="nei-er">
                <div class="nei-er-yi">
                    <div class="nei-er-yiy">
                        <p>手风琴折叠</p>
                    </div>
                    <div class="nei-er-er">
                        <div class="nei-er-er-y">
                            <dt class="list_dtf">
                                <span class="shuo">
                                    <p>layui 更适合哪些开发者？</p>
                                </span>
                            </dt>
                            <dd class="list_ddf">
                                <ul>
                                    <p>在前端技术快速变革的今天，layui 仍然坚持语义化的组织模式，甚
                                        至于模块理念都是采用类AMD组织形式，并非是有意与时代背道而驰
                                        。layui 认为以jQuery为核心的开发方式还没有到完全消亡的时候
                                        ，而早期市面上基于jQuery的UI都普通做得差强人意，所以需要有
                                        一个新的UI去重新为这一领域注入活力，并采用一些更科学的架构
                                        方式。
                                        /php/sh等。模块的问题也是，脚本语言几乎都没有模块/命名
                                        空间功能。弱类型、for-in之类的问题也是，只不过现在用那
                                        些老的脚本语言的人比较少，所以很多人都误以为是JS才有的
                                        坑。另外有人说JS是半残语言，满足不了开发需求，1999年
                                        就该死。半残这个嘛，就夸张了。JS虽然有很多问题，但是
                                        设计总体还是优秀的。——来自知乎@贺师俊
                                    </p>
                                </ul>
                            </dd>
                            <dt class="list_dtf">
                                <span class="shuo">
                                    <p>为什么JS社区大量采用未发布或者未广泛支持的语言特性？</p>
                                </span>
                            </dt>
                            <dd class="list_ddf">
                                <ul>
                                    <p>有不少其他答案说是因为JS太差。我下面的答案已经说了，这不是根
                                        本性的原因。但除此之外，我还要纠正一些对JS具体问题的误解。J
                                        S当初是被作为脚本语言设计的，所以某些问题并不是JS设计得差或者
                                        是JS设计者的失误。比如var的作用域问题，并不是“错误”，而是当
                                        时绝大部分脚本语言都是这样的，如perl/php/sh等。模块的问题也
                                        是，脚本语言几乎都没有模块/命名空间功能。弱类型、for-in之类的
                                        问题也是，只不过现在用那些老的脚本语言的人比较少，所以很多人
                                        都误以为是JS才有的坑。另外有人说JS是半残语言，满足不了开发需
                                        求，1999年就该死。半残这个嘛，就夸张了。JS虽然有很多问题，但
                                        是设计总体还是优秀的。——来自知乎@贺师俊
                                    </p>
                                </ul>
                            </dd>
                            <dt class="list_dtf">
                                <span class="shuo">
                                    <p>为什么前端工程师多不愿意用 Bootstrap 框架？</p>
                                </span>
                            </dt>
                            <dd class="list_ddf">
                                <ul>
                                    <p>因为不适合。如果希望开发长期的项目或者制作产品类网站，那么就
                                        需要实现特定的设计，为了在维护项目中可以方便地按设计师要求快
                                        速修改样式，肯定会逐步编写出各种业务组件、工具类，相当于为
                                        项目自行开发一套框架。——来自知乎@Kayo/php/sh等。模块的问题
                                        也是，脚本语言几乎都没有模块/命名空间功能。弱类型、for-in之
                                        类的问题也是，只不过现在用那些老的脚本语言的人比较少，所以很
                                        多人都误以为是JS才有的坑。另外有人说JS是半残语言，满足不了开
                                        发需求，1999年就该死。半残这个嘛，就夸张了。JS虽然有很多问题
                                        ，但是设计总体还是优秀的。——来自知乎@贺师俊
                                    </p>
                                </ul>
                            </dd>

                            <dt class="list_dtf">
                                <span class="shuo">
                                    <p>贤心是男是女？</p>
                                </span>
                            </dt>
                            <dd class="list_ddf">
                                <ul>
                                    <p>man！ 所以这个问题不要再出现了。。。/php/sh等。模块的问题也是，
                                        脚本语言几乎都没有模块/命名空间功能。弱类型、for-in之类的问题也
                                        是，只不过现在用那些老的脚本语言的人比较少，所以很多人都误以为
                                        是JS才有的坑。另外有人说JS是半残语言，满足不了开发需求，1999年
                                        就该死。半残这个嘛，就夸张了。JS虽然有很多问题，但是设计总体还是
                                        优秀的。——来自知乎@贺师俊
                                    </p>
                                </ul>
                            </dd>
                        </div>
                    </div>
                </div>
            </div>





            <div class="nei-er">
                <div class="nei-er-yi">
                    <div class="nei-er-yiy">
                        <p>折叠面板嵌套</p>
                    </div>
                    <div class="nei-er-er">
                        <dt class="list_dtff">
                            <span class="shuoo">
                                <p>文豪</p>
                            </span>
                        </dt>
                        <dd class="list_ddff">
                            <ul>
                        <dt class="list_dttqw">
                            <p>栅格</p>
                        </dt>
                        <dd class="list_ddqw">
                            <ul>
                                <li class="list_liizz">等比例列表排列</li>
                                <li class="list_liizz">按移动端排列</li>
                                <li class="list_liizz">移动桌面端组合</li>
                            </ul>
                        </dd>
                        <dt class="list_dttqw">
                            <p>栅格</p>
                        </dt>
                        <dd class="list_ddqw">
                            <li class="list_liiii">伟大的科学家</li>
                        </dd>
                        <dt class="list_dttqw">
                            <p>栅格</p>
                        </dt>
                        <dd class="list_ddqw">
                            <li class="list_liiii">浑身散发着艺术细胞</li>
                        </dd>
                        </ul>
                        </dd>
                        <dt class="list_dtff">
                            <span class="shuoo">
                                <p>科学家</p>
                            </span>
                        </dt>
                        <dt class="list_dtff">
                            <span class="shuoo">
                                <p>艺术家</p>
                            </span>
                        </dt>
                    </div>
                </div>
            </div>
            <div class="nei-er">
                <div class="nei-er-yi">
                    <div class="nei-er-yiy">
                        <p>折叠面板</p>
                    </div>
                    <div class="nei-er-errr">
                        <p>就是当这个</p>
                    </div>
                </div>
            </div>
   










<script src="jquery/jquery-1.12.4.js"></script>

<script>

    $(window).resize(() => {
        $(window).width() <= 990 ? $('.right-column').width('0px') : $('.right-column').width('240px')
        $(window).width() <= 990 ? $('.shuo').css({ "opacity": '0' }) : $('.shuo').css({ "opacity": '1' })
        $(window).width() <= 990 ? $('.head').css({ "padding-left": '0px' }) : $('.head').css({ "padding-left": '240px' })
        $(window).width() <= 990 ? $('.logo').css({ "left": '-240px' }) : $('.logo').css({ "left": '0px' })
        $(window).width() <= 990 ? $('.nei').css({ "padding-left": '0px' }) : $('.nei').css({ "padding-left": '240px' })
    })
    $(window).width() <= 990 ? $('.right-column').width('0px') : $('.right-column').width('240px')
    $(window).width() <= 990 ? $('.head').css({ "padding-left": '0px' }) : $('.head').css({ "padding-left": '240px' })
    $(window).width() <= 990 ? $('.nei').css({ "padding-left": '0px' }) : $('.nei').css({ "padding-left": '240px' })
</script>
<script>
    $(".list_dtf").click(function () {
        $('.list_ddf').stop();
        $(this).siblings("dtf").removeAttr("id");
        if ($(this).attr("id") == "open") {
            $(this).removeAttr("id").siblings("dd").slideUp();
        } else {
            $(this).attr("id", "open").next().slideDown().siblings("dd").slideUp();
        }
    });

    $(".list_ddf").click(function () {
        $('.list_ddf').stop();
        $(this).siblings("dtf").removeAttr("id");
        if ($(this).attr("id") == "open") {
            $(this).removeAttr("id").siblings("dd").slideUp();
        } else {
            $(this).attr("id", "open").next().slideDown().siblings("dd").slideUp();
        }
    });

    $(".list_dtff").click(function () {
        $('.list_ddff').stop();
        $(this).siblings("dtf").removeAttr("id");
        if ($(this).attr("id") == "open") {
            $(this).removeAttr("id").siblings("dd").slideUp();
        } else {
            $(this).attr("id", "open").next().slideDown().siblings("dd").slideUp();
        }
    });


    $(".list_dttqw").click(function () {
        $('.list_ddqw').stop();
        $(this).siblings("dtf").removeAttr("id");
        if ($(this).attr("id") == "open") {
            $(this).removeAttr("id").siblings("dd").slideUp();
        } else {
            $(this).attr("id", "open").next().slideDown().siblings("dd").slideUp();
        }
    });
</script>